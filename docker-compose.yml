version: '3.8'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      testnet:
        aliases:
          - zookeeper

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      testnet:
        aliases:
          - kafka

  init-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: init-kafka
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic switch --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
    networks:
      testnet:
        aliases:
          - init-kafka

  counter_manager:
    build:
      context: ./
      dockerfile: Dockerfile-cm-development
    volumes:
      - ./:/monorepo_root
    environment:
      DB_NAME: service_state
      DB_USER: postgres
      DB_PASSWORD: password
      DB_HOST: postgres
      DB_PORT: "5432"
    ports:
      - "8080:8080"
    depends_on:
      - init-kafka
    networks:
        testnet:
          aliases:
            - counter_manager
    
  kafka_message_manager:
    build:
      context: ./
      dockerfile: Dockerfile-kmm-development
    volumes:
      - ./:/monorepo_root
    environment:
      MSK_BROKERS: "kafka:9092"
      DEV_ENV: "TRUE"
    depends_on:
      - init-kafka
    networks:
      testnet:
        aliases:
          - kafka_message_manager

  switcher:
    build:
      context: ./
      dockerfile: Dockerfile-switcher-development
    volumes:
      - ./:/monorepo_root
    environment:
      MSK_BROKERS: "kafka:9092"
    container_name: switcher
    depends_on:
      - init-kafka
    networks:
      testnet:
        aliases:
          - switcher

networks:
  testnet:
    name: testnet
